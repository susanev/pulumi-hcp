#!/usr/bin/env bash

set -euo pipefail

readonly tag_bk_metadata_key="release-tag"

new_tag="$(buildkite-agent meta-data get "${tag_bk_metadata_key}")"

# TODO: validate tag:
# - starts with "v"
# - is semver
# - doesn't have extra whitespace

# TODO: Only export this if ${BUILDKITE_REPO} starts with "https"
export GIT_CONFIG_PARAMETERS="'credential.helper'='!.buildkite/scripts/git-credential-grapl'"

tags=(
    "${new_tag}"
    # For installation of Go modules, we need to have a tag of this
    # form, too.
    # See https://go.dev/ref/mod#vcs-version
    # (The `sdk` portion is because the Go SDK module file is in the
    # `sdk` directory, and not the repository root.)
    # TODO: If factoring this logic out into a plugin, make this generalizable.
    "sdk/${new_tag}"
)

# TODO: do we need to un-shallow the checkouts for this?
function fail_if_tag_exists {
    query_tag="${1}"
    if git tag --list | grep --silent "${query_tag}"; then
        echo "--- :rotating_light: Tag '${query_tag}' already exists in the repository!"
        exit 1
    fi
}

# Check to make sure none of the tags already exist, and fail if they
# do BEFORE actually creating any tags (we either want to create all
# of them or none of them).
for tag in "${tags[@]}"; do
    fail_if_tag_exists "${tag}"
done

for tag in "${tags[@]}"; do
    git tag "${tag}"
    git push origin "${tag}" --verbose
done
